<?xml version="1.0" encoding="utf-8"?>
<torgtaitai:CommonPopupWindow
   xmlns:mx="http://www.adobe.com/2006/mxml"
   xmlns:torgtaitai="*" 
   width="700"
   height="400"
   title="ダイスボット表追加"
   showCloseButton="true"
   >
  
  <mx:HBox width="100%" height="25">
    <mx:Label text="コマンド名：" />
    <mx:TextInput id="commandText" width="100" />
    <mx:Label text="ダイス：" />
    <mx:TextInput id="diceText" width="50" />
    <mx:Label text="表タイトル：" />
    <mx:TextInput id="titleText" width="100%"/>
  </mx:HBox>
  
  <mx:Label text="表内容：" />
  <mx:TextArea id="tableText" text="" height="100%" width="100%" />
  
  <mx:HBox height="25" width="100%" verticalAlign="middle" horizontalAlign="center" >
    <mx:Spacer width="50%" />
    <mx:Button id="executeButton" label="追加作成" click="executeLocal()"  />
    <mx:Spacer width="20" />
    <mx:Button label="キャンセル"  click="closeAction()" />
    <mx:Spacer width="50%" />
    <mx:Button id="sampleButton" label="サンプル表示"  click="printSample()" />
  </mx:HBox>
  
  <mx:Script>
    <![CDATA[
    import mx.managers.PopUpManager;
    import mx.controls.Label;
    import mx.controls.Alert;
    import mx.collections.ArrayCollection;
    import mx.events.CloseEvent;
    
    /**
     * ダイスボット用の表を追加する画面クラス
     */
    
    
    /**
     * Window の初期化処理
     */
    override protected function setup():void {
    }
    
    /**
     * 「サンプル表示」ボタンの表示制御。
     * このボタンはダイスボット表の変更画面では非表示にするために使います。
     */
    public function setVisiblePrintSampleButton(b:Boolean):void {
        sampleButton.visible = b;
    }
    
    /**
     * 入力サンプルを表示します。
     */
    private function printSample():void {
        commandText.text = "SAMPLE";
        diceText.text = "2d6";
        titleText.text = "表サンプル";
        
        var text:String = "";
        text += "2:「コマンド名」をチャットに入力することで、\\n表のロールができるようになります。\n";
        text += "3:この例では「SAMPLE」と入力すれば\\n実行できるようになります。\n";
        text += "4:表のフォーマットは\\nまさにここに書いてある通り、\n";
        text += "5:　（数値）:（メッセージ）\n";
        text += "6:になります。\n";
        text += "7:「コマンド」をチャットで発言すると\\n「ダイス」に記載したダイスを元にランダム選択されます。\n";
        text += "8:ダイス目に合致する値が表に無い場合は空文字になります。\n";
        text += "9:悩むより一度追加してみるのが早いでしょう。\n";
        text += "10:他の人も使える便利な表が出来たら\\n皆で共有してあげてくださいね！\n";
        text += "11:そろそろ\\n書く事無くなってきましたね…\n";
        text += "12:以上です。";
        tableText.text = text;
    }
    
    protected var window:ManageBotTableWindow;
    
    /**
     * 初期化処理。
     * @window_ ダイスボット表の管理画面
     * @command 表コマンドの初期値
     * @dice ダイスロールのコマンド文字(xDy)
     * @titleText_ 表のタイトル
     * @tableText_ 表の一覧情報
     */
    public function init(window_:ManageBotTableWindow,
                         command:String = "",
                         dice:String = "",
                         titleText_:String = "",
                         tableText_:String = ""):void {
        window = window_;
        
        commandText.text = command;
        diceText.text = dice;
        titleText.text = titleText_;
        tableText.text = tableText_;
        
        initAfter();
    }
    
    
    /**
     * 初期化後の追加処理。
     * ダイスボット表変更画面で追加処理を入れるために使います。
     */
    public function initAfter():void {
    }
    
    /**
     * 実行ボタン処理。
     */
    public function executeLocal():void {
        executeButton.enabled = false;
        status = "";
        
        execute();
    }
    
    /**
     * 表追加処理
     */
    public function execute():void {
        window.addBotTable(commandText.text, diceText.text, titleText.text,
                           getTableTextFromTextArea(),
                           checkResult);
    }
    
    /**
     * テキストエリアの文字列は改行コードが特殊なのでここで加工
     */
    protected function getTableTextFromTextArea():String {
        var text:String = tableText.text;
        
        text = text.replace(/\r/g, "\n");
        Log.logging("getTableTextFromTextArea text", text);
        
        return text;
    }
    
    /**
     * 表追加・変更処理が成功したかのチェック処理。
     */
    public function checkResult(jsonData:Object):Boolean {
        if( jsonData.resultText == 'OK' ) {
            closeAction();
            return true;
        }
        
        status = jsonData.resultText;
        executeButton.enabled = true;
        return false;
    }
    
    ]]>
  </mx:Script>
</torgtaitai:CommonPopupWindow>
